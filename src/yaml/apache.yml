apiVersion: apps/v1
kind: Deployment
metadata:
 name: myservicepod7
 labels:
  app: servicepod
spec:
 replicas: 1
 selector: 
  matchLabels:
   app: servicepod
 template:
  metadata:
    annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'internal-app'
        vault.hashicorp.com/agent-inject-secret-config: 'internal/data/database/config'
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "internal/data/database/config" -}}
            export MYSQL_ROOT_PASSWORD_COMING_FROM_VAULT="{{ .Data.data.password }}"
          {{- end }}
    labels:
     app: servicepod
  spec:
   serviceAccountName: utk2
   volumes:
   - name: hostvolume
     hostPath:
      path: /
   containers:
   - name: php
     image: php:7.2-apache
     command: ["/bin/bash", "-c",]
     args: ['service apache2 start && sleep infinity']
     workingDir: /var/www/html
     ports:
      - name: serviceport
        containerPort: 80
     volumeMounts: 
      - name: hostvolume
        mountPath: /var/www/html

---
apiVersion: v1
kind: Service
metadata:
 name: myservices
spec: 
 type: NodePort
 selector:
  app: servicepod
 ports:
 - protocol: TCP
   port: 80
   targetPort: 80
   nodePort: 30101

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
 name: sarolebind
 namespace: default
subjects:
 - kind: ServiceAccount
   name: utk2

roleRef:
 kind: Role
 name: pod_reader
 apiGroup: rbac.authorization.k8s.io


---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata: 
 namespace: default
 name: pod_reader

rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]

---

apiVersion: v1
kind: ServiceAccount
metadata: 
 name: utk2
 namespace: default
automountServiceAccountToken: true

